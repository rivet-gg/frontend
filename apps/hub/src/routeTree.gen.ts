/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedBillingImport } from './routes/_authenticated/billing'
import { Route as AuthenticatedLayoutImport } from './routes/_authenticated/_layout'
import { Route as AuthenticatedLayoutIndexImport } from './routes/_authenticated/_layout/index'
import { Route as AuthenticatedInviteInviteCodeImport } from './routes/_authenticated/invite.$inviteCode'
import { Route as AuthenticatedAccessTokenTokenImport } from './routes/_authenticated/access-token.$token'
import { Route as AuthenticatedLayoutMyProfileImport } from './routes/_authenticated/_layout/my-profile'
import { Route as AuthenticatedLayoutMyProfileIndexImport } from './routes/_authenticated/_layout/my-profile/index'
import { Route as AuthenticatedDevicesLinkTokenImport } from './routes/_authenticated/devices.link.$token'
import { Route as AuthenticatedLayoutTeamsGroupIdImport } from './routes/_authenticated/_layout/teams/$groupId'
import { Route as AuthenticatedLayoutProjectsProjectIdImport } from './routes/_authenticated/_layout/projects/$projectId'
import { Route as AuthenticatedLayoutMyProfileFeaturesImport } from './routes/_authenticated/_layout/my-profile/features'
import { Route as AuthenticatedLayoutGamesSplatImport } from './routes/_authenticated/_layout/games/$'
import { Route as AuthenticatedLayoutTeamsGroupIdIndexImport } from './routes/_authenticated/_layout/teams/$groupId/index'
import { Route as AuthenticatedLayoutProjectsProjectIdIndexImport } from './routes/_authenticated/_layout/projects/$projectId/index'
import { Route as AuthenticatedLayoutTeamsGroupIdSettingsImport } from './routes/_authenticated/_layout/teams/$groupId/settings'
import { Route as AuthenticatedLayoutTeamsGroupIdMembersImport } from './routes/_authenticated/_layout/teams/$groupId/members'
import { Route as AuthenticatedLayoutTeamsGroupIdBillingImport } from './routes/_authenticated/_layout/teams/$groupId/billing'
import { Route as AuthenticatedLayoutProjectsProjectIdTokensImport } from './routes/_authenticated/_layout/projects/$projectId/tokens'
import { Route as AuthenticatedLayoutProjectsProjectIdSettingsImport } from './routes/_authenticated/_layout/projects/$projectId/settings'
import { Route as AuthenticatedLayoutProjectsProjectIdBillingImport } from './routes/_authenticated/_layout/projects/$projectId/billing'
import { Route as AuthenticatedLayoutTeamsGroupIdSettingsIndexImport } from './routes/_authenticated/_layout/teams/$groupId/settings/index'
import { Route as AuthenticatedLayoutProjectsProjectIdSettingsIndexImport } from './routes/_authenticated/_layout/projects/$projectId/settings/index'
import { Route as AuthenticatedLayoutProjectsProjectIdSettingsTokensImport } from './routes/_authenticated/_layout/projects/$projectId/settings/tokens'
import { Route as AuthenticatedLayoutProjectsProjectIdNamespacesSplatImport } from './routes/_authenticated/_layout/projects/$projectId/namespaces/$'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/index'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/index'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/index'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables'
import { Route as AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsImport } from './routes/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedBillingRoute = AuthenticatedBillingImport.update({
  path: '/billing',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLayoutRoute = AuthenticatedLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLayoutIndexRoute = AuthenticatedLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedLayoutRoute,
} as any)

const AuthenticatedInviteInviteCodeRoute =
  AuthenticatedInviteInviteCodeImport.update({
    path: '/invite/$inviteCode',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAccessTokenTokenRoute =
  AuthenticatedAccessTokenTokenImport.update({
    path: '/access-token/$token',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedLayoutMyProfileRoute =
  AuthenticatedLayoutMyProfileImport.update({
    path: '/my-profile',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutMyProfileIndexRoute =
  AuthenticatedLayoutMyProfileIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutMyProfileRoute,
  } as any)

const AuthenticatedDevicesLinkTokenRoute =
  AuthenticatedDevicesLinkTokenImport.update({
    path: '/devices/link/$token',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedLayoutTeamsGroupIdRoute =
  AuthenticatedLayoutTeamsGroupIdImport.update({
    path: '/teams/$groupId',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdRoute =
  AuthenticatedLayoutProjectsProjectIdImport.update({
    path: '/projects/$projectId',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutMyProfileFeaturesRoute =
  AuthenticatedLayoutMyProfileFeaturesImport.update({
    path: '/features',
    getParentRoute: () => AuthenticatedLayoutMyProfileRoute,
  } as any)

const AuthenticatedLayoutGamesSplatRoute =
  AuthenticatedLayoutGamesSplatImport.update({
    path: '/games/$',
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any)

const AuthenticatedLayoutTeamsGroupIdIndexRoute =
  AuthenticatedLayoutTeamsGroupIdIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutTeamsGroupIdRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdIndexRoute =
  AuthenticatedLayoutProjectsProjectIdIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdRoute,
  } as any)

const AuthenticatedLayoutTeamsGroupIdSettingsRoute =
  AuthenticatedLayoutTeamsGroupIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => AuthenticatedLayoutTeamsGroupIdRoute,
  } as any)

const AuthenticatedLayoutTeamsGroupIdMembersRoute =
  AuthenticatedLayoutTeamsGroupIdMembersImport.update({
    path: '/members',
    getParentRoute: () => AuthenticatedLayoutTeamsGroupIdRoute,
  } as any)

const AuthenticatedLayoutTeamsGroupIdBillingRoute =
  AuthenticatedLayoutTeamsGroupIdBillingImport.update({
    path: '/billing',
    getParentRoute: () => AuthenticatedLayoutTeamsGroupIdRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdTokensRoute =
  AuthenticatedLayoutProjectsProjectIdTokensImport.update({
    path: '/tokens',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdSettingsRoute =
  AuthenticatedLayoutProjectsProjectIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdBillingRoute =
  AuthenticatedLayoutProjectsProjectIdBillingImport.update({
    path: '/billing',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdRoute,
  } as any)

const AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute =
  AuthenticatedLayoutTeamsGroupIdSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutTeamsGroupIdSettingsRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute =
  AuthenticatedLayoutProjectsProjectIdSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdSettingsRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute =
  AuthenticatedLayoutProjectsProjectIdSettingsTokensImport.update({
    path: '/tokens',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdSettingsRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute =
  AuthenticatedLayoutProjectsProjectIdNamespacesSplatImport.update({
    path: '/namespaces/$',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport.update({
    path: '/environments/$environmentId',
    getParentRoute: () => AuthenticatedLayoutProjectsProjectIdRoute,
  } as any)

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexImport.update(
    {
      path: '/',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsImport.update(
    {
      path: '/versions',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensImport.update(
    {
      path: '/tokens',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersImport.update(
    {
      path: '/servers',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesImport.update(
    {
      path: '/modules',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerImport.update(
    {
      path: '/matchmaker',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesImport.update(
    {
      path: '/lobbies',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnImport.update(
    {
      path: '/cdn',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsImport.update(
    {
      path: '/builds',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendImport.update(
    {
      path: '/backend',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexImport.update(
    {
      path: '/',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexImport.update(
    {
      path: '/',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatImport.update(
    {
      path: '/$',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsImport.update(
    {
      path: '/settings',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsImport.update(
    {
      path: '/logs',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesImport.update(
    {
      path: '/variables',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute,
    } as any,
  )

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsImport.update(
    {
      path: '/logs',
      getParentRoute: () =>
        AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_layout': {
      id: '/_authenticated/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/billing': {
      id: '/_authenticated/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof AuthenticatedBillingImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_layout/my-profile': {
      id: '/_authenticated/_layout/my-profile'
      path: '/my-profile'
      fullPath: '/my-profile'
      preLoaderRoute: typeof AuthenticatedLayoutMyProfileImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/access-token/$token': {
      id: '/_authenticated/access-token/$token'
      path: '/access-token/$token'
      fullPath: '/access-token/$token'
      preLoaderRoute: typeof AuthenticatedAccessTokenTokenImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/invite/$inviteCode': {
      id: '/_authenticated/invite/$inviteCode'
      path: '/invite/$inviteCode'
      fullPath: '/invite/$inviteCode'
      preLoaderRoute: typeof AuthenticatedInviteInviteCodeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_layout/': {
      id: '/_authenticated/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedLayoutIndexImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/games/$': {
      id: '/_authenticated/_layout/games/$'
      path: '/games/$'
      fullPath: '/games/$'
      preLoaderRoute: typeof AuthenticatedLayoutGamesSplatImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/my-profile/features': {
      id: '/_authenticated/_layout/my-profile/features'
      path: '/features'
      fullPath: '/my-profile/features'
      preLoaderRoute: typeof AuthenticatedLayoutMyProfileFeaturesImport
      parentRoute: typeof AuthenticatedLayoutMyProfileImport
    }
    '/_authenticated/_layout/projects/$projectId': {
      id: '/_authenticated/_layout/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/_layout/teams/$groupId': {
      id: '/_authenticated/_layout/teams/$groupId'
      path: '/teams/$groupId'
      fullPath: '/teams/$groupId'
      preLoaderRoute: typeof AuthenticatedLayoutTeamsGroupIdImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    '/_authenticated/devices/link/$token': {
      id: '/_authenticated/devices/link/$token'
      path: '/devices/link/$token'
      fullPath: '/devices/link/$token'
      preLoaderRoute: typeof AuthenticatedDevicesLinkTokenImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_layout/my-profile/': {
      id: '/_authenticated/_layout/my-profile/'
      path: '/'
      fullPath: '/my-profile/'
      preLoaderRoute: typeof AuthenticatedLayoutMyProfileIndexImport
      parentRoute: typeof AuthenticatedLayoutMyProfileImport
    }
    '/_authenticated/_layout/projects/$projectId/billing': {
      id: '/_authenticated/_layout/projects/$projectId/billing'
      path: '/billing'
      fullPath: '/projects/$projectId/billing'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdBillingImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
    }
    '/_authenticated/_layout/projects/$projectId/settings': {
      id: '/_authenticated/_layout/projects/$projectId/settings'
      path: '/settings'
      fullPath: '/projects/$projectId/settings'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
    }
    '/_authenticated/_layout/projects/$projectId/tokens': {
      id: '/_authenticated/_layout/projects/$projectId/tokens'
      path: '/tokens'
      fullPath: '/projects/$projectId/tokens'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdTokensImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
    }
    '/_authenticated/_layout/teams/$groupId/billing': {
      id: '/_authenticated/_layout/teams/$groupId/billing'
      path: '/billing'
      fullPath: '/teams/$groupId/billing'
      preLoaderRoute: typeof AuthenticatedLayoutTeamsGroupIdBillingImport
      parentRoute: typeof AuthenticatedLayoutTeamsGroupIdImport
    }
    '/_authenticated/_layout/teams/$groupId/members': {
      id: '/_authenticated/_layout/teams/$groupId/members'
      path: '/members'
      fullPath: '/teams/$groupId/members'
      preLoaderRoute: typeof AuthenticatedLayoutTeamsGroupIdMembersImport
      parentRoute: typeof AuthenticatedLayoutTeamsGroupIdImport
    }
    '/_authenticated/_layout/teams/$groupId/settings': {
      id: '/_authenticated/_layout/teams/$groupId/settings'
      path: '/settings'
      fullPath: '/teams/$groupId/settings'
      preLoaderRoute: typeof AuthenticatedLayoutTeamsGroupIdSettingsImport
      parentRoute: typeof AuthenticatedLayoutTeamsGroupIdImport
    }
    '/_authenticated/_layout/projects/$projectId/': {
      id: '/_authenticated/_layout/projects/$projectId/'
      path: '/'
      fullPath: '/projects/$projectId/'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdIndexImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
    }
    '/_authenticated/_layout/teams/$groupId/': {
      id: '/_authenticated/_layout/teams/$groupId/'
      path: '/'
      fullPath: '/teams/$groupId/'
      preLoaderRoute: typeof AuthenticatedLayoutTeamsGroupIdIndexImport
      parentRoute: typeof AuthenticatedLayoutTeamsGroupIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId'
      path: '/environments/$environmentId'
      fullPath: '/projects/$projectId/environments/$environmentId'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
    }
    '/_authenticated/_layout/projects/$projectId/namespaces/$': {
      id: '/_authenticated/_layout/projects/$projectId/namespaces/$'
      path: '/namespaces/$'
      fullPath: '/projects/$projectId/namespaces/$'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdNamespacesSplatImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdImport
    }
    '/_authenticated/_layout/projects/$projectId/settings/tokens': {
      id: '/_authenticated/_layout/projects/$projectId/settings/tokens'
      path: '/tokens'
      fullPath: '/projects/$projectId/settings/tokens'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsTokensImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsImport
    }
    '/_authenticated/_layout/projects/$projectId/settings/': {
      id: '/_authenticated/_layout/projects/$projectId/settings/'
      path: '/'
      fullPath: '/projects/$projectId/settings/'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsIndexImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsImport
    }
    '/_authenticated/_layout/teams/$groupId/settings/': {
      id: '/_authenticated/_layout/teams/$groupId/settings/'
      path: '/'
      fullPath: '/teams/$groupId/settings/'
      preLoaderRoute: typeof AuthenticatedLayoutTeamsGroupIdSettingsIndexImport
      parentRoute: typeof AuthenticatedLayoutTeamsGroupIdSettingsImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend'
      path: '/backend'
      fullPath: '/projects/$projectId/environments/$environmentId/backend'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds'
      path: '/builds'
      fullPath: '/projects/$projectId/environments/$environmentId/builds'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn'
      path: '/cdn'
      fullPath: '/projects/$projectId/environments/$environmentId/cdn'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies'
      path: '/lobbies'
      fullPath: '/projects/$projectId/environments/$environmentId/lobbies'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker'
      path: '/matchmaker'
      fullPath: '/projects/$projectId/environments/$environmentId/matchmaker'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules'
      path: '/modules'
      fullPath: '/projects/$projectId/environments/$environmentId/modules'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers'
      path: '/servers'
      fullPath: '/projects/$projectId/environments/$environmentId/servers'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens'
      path: '/tokens'
      fullPath: '/projects/$projectId/environments/$environmentId/tokens'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions'
      path: '/versions'
      fullPath: '/projects/$projectId/environments/$environmentId/versions'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/'
      path: '/'
      fullPath: '/projects/$projectId/environments/$environmentId/'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs'
      path: '/logs'
      fullPath: '/projects/$projectId/environments/$environmentId/backend/logs'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables'
      path: '/variables'
      fullPath: '/projects/$projectId/environments/$environmentId/backend/variables'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs'
      path: '/logs'
      fullPath: '/projects/$projectId/environments/$environmentId/lobbies/logs'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings'
      path: '/settings'
      fullPath: '/projects/$projectId/environments/$environmentId/lobbies/settings'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$'
      path: '/$'
      fullPath: '/projects/$projectId/environments/$environmentId/servers/$'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/'
      path: '/'
      fullPath: '/projects/$projectId/environments/$environmentId/backend/'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendImport
    }
    '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/': {
      id: '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/'
      path: '/'
      fullPath: '/projects/$projectId/environments/$environmentId/lobbies/'
      preLoaderRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexImport
      parentRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedLayoutMyProfileRouteChildren {
  AuthenticatedLayoutMyProfileFeaturesRoute: typeof AuthenticatedLayoutMyProfileFeaturesRoute
  AuthenticatedLayoutMyProfileIndexRoute: typeof AuthenticatedLayoutMyProfileIndexRoute
}

const AuthenticatedLayoutMyProfileRouteChildren: AuthenticatedLayoutMyProfileRouteChildren =
  {
    AuthenticatedLayoutMyProfileFeaturesRoute:
      AuthenticatedLayoutMyProfileFeaturesRoute,
    AuthenticatedLayoutMyProfileIndexRoute:
      AuthenticatedLayoutMyProfileIndexRoute,
  }

const AuthenticatedLayoutMyProfileRouteWithChildren =
  AuthenticatedLayoutMyProfileRoute._addFileChildren(
    AuthenticatedLayoutMyProfileRouteChildren,
  )

interface AuthenticatedLayoutProjectsProjectIdSettingsRouteChildren {
  AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute
  AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute
}

const AuthenticatedLayoutProjectsProjectIdSettingsRouteChildren: AuthenticatedLayoutProjectsProjectIdSettingsRouteChildren =
  {
    AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute:
      AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute,
    AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute:
      AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute,
  }

const AuthenticatedLayoutProjectsProjectIdSettingsRouteWithChildren =
  AuthenticatedLayoutProjectsProjectIdSettingsRoute._addFileChildren(
    AuthenticatedLayoutProjectsProjectIdSettingsRouteChildren,
  )

interface AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteChildren {
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute
}

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteChildren: AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteChildren =
  {
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute,
  }

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteWithChildren =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute._addFileChildren(
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteChildren,
  )

interface AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteChildren {
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute
}

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteChildren: AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteChildren =
  {
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute,
  }

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteWithChildren =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute._addFileChildren(
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteChildren,
  )

interface AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteChildren {
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute
}

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteChildren: AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteChildren =
  {
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute,
  }

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteWithChildren =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRoute._addFileChildren(
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteChildren,
  )

interface AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteChildren {
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteWithChildren
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteWithChildren
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteWithChildren
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute
}

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteChildren: AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteChildren =
  {
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteWithChildren,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteWithChildren,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteWithChildren,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute,
  }

const AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteWithChildren =
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute._addFileChildren(
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteChildren,
  )

interface AuthenticatedLayoutProjectsProjectIdRouteChildren {
  AuthenticatedLayoutProjectsProjectIdBillingRoute: typeof AuthenticatedLayoutProjectsProjectIdBillingRoute
  AuthenticatedLayoutProjectsProjectIdSettingsRoute: typeof AuthenticatedLayoutProjectsProjectIdSettingsRouteWithChildren
  AuthenticatedLayoutProjectsProjectIdTokensRoute: typeof AuthenticatedLayoutProjectsProjectIdTokensRoute
  AuthenticatedLayoutProjectsProjectIdIndexRoute: typeof AuthenticatedLayoutProjectsProjectIdIndexRoute
  AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute: typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteWithChildren
  AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute: typeof AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute
}

const AuthenticatedLayoutProjectsProjectIdRouteChildren: AuthenticatedLayoutProjectsProjectIdRouteChildren =
  {
    AuthenticatedLayoutProjectsProjectIdBillingRoute:
      AuthenticatedLayoutProjectsProjectIdBillingRoute,
    AuthenticatedLayoutProjectsProjectIdSettingsRoute:
      AuthenticatedLayoutProjectsProjectIdSettingsRouteWithChildren,
    AuthenticatedLayoutProjectsProjectIdTokensRoute:
      AuthenticatedLayoutProjectsProjectIdTokensRoute,
    AuthenticatedLayoutProjectsProjectIdIndexRoute:
      AuthenticatedLayoutProjectsProjectIdIndexRoute,
    AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRoute:
      AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteWithChildren,
    AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute:
      AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute,
  }

const AuthenticatedLayoutProjectsProjectIdRouteWithChildren =
  AuthenticatedLayoutProjectsProjectIdRoute._addFileChildren(
    AuthenticatedLayoutProjectsProjectIdRouteChildren,
  )

interface AuthenticatedLayoutTeamsGroupIdSettingsRouteChildren {
  AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute: typeof AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute
}

const AuthenticatedLayoutTeamsGroupIdSettingsRouteChildren: AuthenticatedLayoutTeamsGroupIdSettingsRouteChildren =
  {
    AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute:
      AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute,
  }

const AuthenticatedLayoutTeamsGroupIdSettingsRouteWithChildren =
  AuthenticatedLayoutTeamsGroupIdSettingsRoute._addFileChildren(
    AuthenticatedLayoutTeamsGroupIdSettingsRouteChildren,
  )

interface AuthenticatedLayoutTeamsGroupIdRouteChildren {
  AuthenticatedLayoutTeamsGroupIdBillingRoute: typeof AuthenticatedLayoutTeamsGroupIdBillingRoute
  AuthenticatedLayoutTeamsGroupIdMembersRoute: typeof AuthenticatedLayoutTeamsGroupIdMembersRoute
  AuthenticatedLayoutTeamsGroupIdSettingsRoute: typeof AuthenticatedLayoutTeamsGroupIdSettingsRouteWithChildren
  AuthenticatedLayoutTeamsGroupIdIndexRoute: typeof AuthenticatedLayoutTeamsGroupIdIndexRoute
}

const AuthenticatedLayoutTeamsGroupIdRouteChildren: AuthenticatedLayoutTeamsGroupIdRouteChildren =
  {
    AuthenticatedLayoutTeamsGroupIdBillingRoute:
      AuthenticatedLayoutTeamsGroupIdBillingRoute,
    AuthenticatedLayoutTeamsGroupIdMembersRoute:
      AuthenticatedLayoutTeamsGroupIdMembersRoute,
    AuthenticatedLayoutTeamsGroupIdSettingsRoute:
      AuthenticatedLayoutTeamsGroupIdSettingsRouteWithChildren,
    AuthenticatedLayoutTeamsGroupIdIndexRoute:
      AuthenticatedLayoutTeamsGroupIdIndexRoute,
  }

const AuthenticatedLayoutTeamsGroupIdRouteWithChildren =
  AuthenticatedLayoutTeamsGroupIdRoute._addFileChildren(
    AuthenticatedLayoutTeamsGroupIdRouteChildren,
  )

interface AuthenticatedLayoutRouteChildren {
  AuthenticatedLayoutMyProfileRoute: typeof AuthenticatedLayoutMyProfileRouteWithChildren
  AuthenticatedLayoutIndexRoute: typeof AuthenticatedLayoutIndexRoute
  AuthenticatedLayoutGamesSplatRoute: typeof AuthenticatedLayoutGamesSplatRoute
  AuthenticatedLayoutProjectsProjectIdRoute: typeof AuthenticatedLayoutProjectsProjectIdRouteWithChildren
  AuthenticatedLayoutTeamsGroupIdRoute: typeof AuthenticatedLayoutTeamsGroupIdRouteWithChildren
}

const AuthenticatedLayoutRouteChildren: AuthenticatedLayoutRouteChildren = {
  AuthenticatedLayoutMyProfileRoute:
    AuthenticatedLayoutMyProfileRouteWithChildren,
  AuthenticatedLayoutIndexRoute: AuthenticatedLayoutIndexRoute,
  AuthenticatedLayoutGamesSplatRoute: AuthenticatedLayoutGamesSplatRoute,
  AuthenticatedLayoutProjectsProjectIdRoute:
    AuthenticatedLayoutProjectsProjectIdRouteWithChildren,
  AuthenticatedLayoutTeamsGroupIdRoute:
    AuthenticatedLayoutTeamsGroupIdRouteWithChildren,
}

const AuthenticatedLayoutRouteWithChildren =
  AuthenticatedLayoutRoute._addFileChildren(AuthenticatedLayoutRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedLayoutRoute: typeof AuthenticatedLayoutRouteWithChildren
  AuthenticatedBillingRoute: typeof AuthenticatedBillingRoute
  AuthenticatedAccessTokenTokenRoute: typeof AuthenticatedAccessTokenTokenRoute
  AuthenticatedInviteInviteCodeRoute: typeof AuthenticatedInviteInviteCodeRoute
  AuthenticatedDevicesLinkTokenRoute: typeof AuthenticatedDevicesLinkTokenRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedLayoutRoute: AuthenticatedLayoutRouteWithChildren,
  AuthenticatedBillingRoute: AuthenticatedBillingRoute,
  AuthenticatedAccessTokenTokenRoute: AuthenticatedAccessTokenTokenRoute,
  AuthenticatedInviteInviteCodeRoute: AuthenticatedInviteInviteCodeRoute,
  AuthenticatedDevicesLinkTokenRoute: AuthenticatedDevicesLinkTokenRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/billing': typeof AuthenticatedBillingRoute
  '/my-profile': typeof AuthenticatedLayoutMyProfileRouteWithChildren
  '/access-token/$token': typeof AuthenticatedAccessTokenTokenRoute
  '/invite/$inviteCode': typeof AuthenticatedInviteInviteCodeRoute
  '/': typeof AuthenticatedLayoutIndexRoute
  '/games/$': typeof AuthenticatedLayoutGamesSplatRoute
  '/my-profile/features': typeof AuthenticatedLayoutMyProfileFeaturesRoute
  '/projects/$projectId': typeof AuthenticatedLayoutProjectsProjectIdRouteWithChildren
  '/teams/$groupId': typeof AuthenticatedLayoutTeamsGroupIdRouteWithChildren
  '/devices/link/$token': typeof AuthenticatedDevicesLinkTokenRoute
  '/my-profile/': typeof AuthenticatedLayoutMyProfileIndexRoute
  '/projects/$projectId/billing': typeof AuthenticatedLayoutProjectsProjectIdBillingRoute
  '/projects/$projectId/settings': typeof AuthenticatedLayoutProjectsProjectIdSettingsRouteWithChildren
  '/projects/$projectId/tokens': typeof AuthenticatedLayoutProjectsProjectIdTokensRoute
  '/teams/$groupId/billing': typeof AuthenticatedLayoutTeamsGroupIdBillingRoute
  '/teams/$groupId/members': typeof AuthenticatedLayoutTeamsGroupIdMembersRoute
  '/teams/$groupId/settings': typeof AuthenticatedLayoutTeamsGroupIdSettingsRouteWithChildren
  '/projects/$projectId/': typeof AuthenticatedLayoutProjectsProjectIdIndexRoute
  '/teams/$groupId/': typeof AuthenticatedLayoutTeamsGroupIdIndexRoute
  '/projects/$projectId/environments/$environmentId': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteWithChildren
  '/projects/$projectId/namespaces/$': typeof AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute
  '/projects/$projectId/settings/tokens': typeof AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute
  '/projects/$projectId/settings/': typeof AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute
  '/teams/$groupId/settings/': typeof AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute
  '/projects/$projectId/environments/$environmentId/backend': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteWithChildren
  '/projects/$projectId/environments/$environmentId/builds': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute
  '/projects/$projectId/environments/$environmentId/cdn': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute
  '/projects/$projectId/environments/$environmentId/lobbies': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteWithChildren
  '/projects/$projectId/environments/$environmentId/matchmaker': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute
  '/projects/$projectId/environments/$environmentId/modules': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute
  '/projects/$projectId/environments/$environmentId/servers': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteWithChildren
  '/projects/$projectId/environments/$environmentId/tokens': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute
  '/projects/$projectId/environments/$environmentId/versions': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute
  '/projects/$projectId/environments/$environmentId/': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute
  '/projects/$projectId/environments/$environmentId/backend/logs': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute
  '/projects/$projectId/environments/$environmentId/backend/variables': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute
  '/projects/$projectId/environments/$environmentId/lobbies/logs': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute
  '/projects/$projectId/environments/$environmentId/lobbies/settings': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute
  '/projects/$projectId/environments/$environmentId/servers/$': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute
  '/projects/$projectId/environments/$environmentId/backend/': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute
  '/projects/$projectId/environments/$environmentId/lobbies/': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/billing': typeof AuthenticatedBillingRoute
  '/access-token/$token': typeof AuthenticatedAccessTokenTokenRoute
  '/invite/$inviteCode': typeof AuthenticatedInviteInviteCodeRoute
  '/': typeof AuthenticatedLayoutIndexRoute
  '/games/$': typeof AuthenticatedLayoutGamesSplatRoute
  '/my-profile/features': typeof AuthenticatedLayoutMyProfileFeaturesRoute
  '/devices/link/$token': typeof AuthenticatedDevicesLinkTokenRoute
  '/my-profile': typeof AuthenticatedLayoutMyProfileIndexRoute
  '/projects/$projectId/billing': typeof AuthenticatedLayoutProjectsProjectIdBillingRoute
  '/projects/$projectId/tokens': typeof AuthenticatedLayoutProjectsProjectIdTokensRoute
  '/teams/$groupId/billing': typeof AuthenticatedLayoutTeamsGroupIdBillingRoute
  '/teams/$groupId/members': typeof AuthenticatedLayoutTeamsGroupIdMembersRoute
  '/projects/$projectId': typeof AuthenticatedLayoutProjectsProjectIdIndexRoute
  '/teams/$groupId': typeof AuthenticatedLayoutTeamsGroupIdIndexRoute
  '/projects/$projectId/namespaces/$': typeof AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute
  '/projects/$projectId/settings/tokens': typeof AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute
  '/projects/$projectId/settings': typeof AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute
  '/teams/$groupId/settings': typeof AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute
  '/projects/$projectId/environments/$environmentId/builds': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute
  '/projects/$projectId/environments/$environmentId/cdn': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute
  '/projects/$projectId/environments/$environmentId/matchmaker': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute
  '/projects/$projectId/environments/$environmentId/modules': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute
  '/projects/$projectId/environments/$environmentId/servers': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteWithChildren
  '/projects/$projectId/environments/$environmentId/tokens': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute
  '/projects/$projectId/environments/$environmentId/versions': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute
  '/projects/$projectId/environments/$environmentId': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute
  '/projects/$projectId/environments/$environmentId/backend/logs': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute
  '/projects/$projectId/environments/$environmentId/backend/variables': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute
  '/projects/$projectId/environments/$environmentId/lobbies/logs': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute
  '/projects/$projectId/environments/$environmentId/lobbies/settings': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute
  '/projects/$projectId/environments/$environmentId/servers/$': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute
  '/projects/$projectId/environments/$environmentId/backend': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute
  '/projects/$projectId/environments/$environmentId/lobbies': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/_layout': typeof AuthenticatedLayoutRouteWithChildren
  '/_authenticated/billing': typeof AuthenticatedBillingRoute
  '/_authenticated/_layout/my-profile': typeof AuthenticatedLayoutMyProfileRouteWithChildren
  '/_authenticated/access-token/$token': typeof AuthenticatedAccessTokenTokenRoute
  '/_authenticated/invite/$inviteCode': typeof AuthenticatedInviteInviteCodeRoute
  '/_authenticated/_layout/': typeof AuthenticatedLayoutIndexRoute
  '/_authenticated/_layout/games/$': typeof AuthenticatedLayoutGamesSplatRoute
  '/_authenticated/_layout/my-profile/features': typeof AuthenticatedLayoutMyProfileFeaturesRoute
  '/_authenticated/_layout/projects/$projectId': typeof AuthenticatedLayoutProjectsProjectIdRouteWithChildren
  '/_authenticated/_layout/teams/$groupId': typeof AuthenticatedLayoutTeamsGroupIdRouteWithChildren
  '/_authenticated/devices/link/$token': typeof AuthenticatedDevicesLinkTokenRoute
  '/_authenticated/_layout/my-profile/': typeof AuthenticatedLayoutMyProfileIndexRoute
  '/_authenticated/_layout/projects/$projectId/billing': typeof AuthenticatedLayoutProjectsProjectIdBillingRoute
  '/_authenticated/_layout/projects/$projectId/settings': typeof AuthenticatedLayoutProjectsProjectIdSettingsRouteWithChildren
  '/_authenticated/_layout/projects/$projectId/tokens': typeof AuthenticatedLayoutProjectsProjectIdTokensRoute
  '/_authenticated/_layout/teams/$groupId/billing': typeof AuthenticatedLayoutTeamsGroupIdBillingRoute
  '/_authenticated/_layout/teams/$groupId/members': typeof AuthenticatedLayoutTeamsGroupIdMembersRoute
  '/_authenticated/_layout/teams/$groupId/settings': typeof AuthenticatedLayoutTeamsGroupIdSettingsRouteWithChildren
  '/_authenticated/_layout/projects/$projectId/': typeof AuthenticatedLayoutProjectsProjectIdIndexRoute
  '/_authenticated/_layout/teams/$groupId/': typeof AuthenticatedLayoutTeamsGroupIdIndexRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdRouteWithChildren
  '/_authenticated/_layout/projects/$projectId/namespaces/$': typeof AuthenticatedLayoutProjectsProjectIdNamespacesSplatRoute
  '/_authenticated/_layout/projects/$projectId/settings/tokens': typeof AuthenticatedLayoutProjectsProjectIdSettingsTokensRoute
  '/_authenticated/_layout/projects/$projectId/settings/': typeof AuthenticatedLayoutProjectsProjectIdSettingsIndexRoute
  '/_authenticated/_layout/teams/$groupId/settings/': typeof AuthenticatedLayoutTeamsGroupIdSettingsIndexRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendRouteWithChildren
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBuildsRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdCdnRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesRouteWithChildren
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdMatchmakerRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdModulesRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersRouteWithChildren
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdTokensRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdVersionsRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdIndexRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendLogsRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendVariablesRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesLogsRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesSettingsRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdServersSplatRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdBackendIndexRoute
  '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/': typeof AuthenticatedLayoutProjectsProjectIdEnvironmentsEnvironmentIdLobbiesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/billing'
    | '/my-profile'
    | '/access-token/$token'
    | '/invite/$inviteCode'
    | '/'
    | '/games/$'
    | '/my-profile/features'
    | '/projects/$projectId'
    | '/teams/$groupId'
    | '/devices/link/$token'
    | '/my-profile/'
    | '/projects/$projectId/billing'
    | '/projects/$projectId/settings'
    | '/projects/$projectId/tokens'
    | '/teams/$groupId/billing'
    | '/teams/$groupId/members'
    | '/teams/$groupId/settings'
    | '/projects/$projectId/'
    | '/teams/$groupId/'
    | '/projects/$projectId/environments/$environmentId'
    | '/projects/$projectId/namespaces/$'
    | '/projects/$projectId/settings/tokens'
    | '/projects/$projectId/settings/'
    | '/teams/$groupId/settings/'
    | '/projects/$projectId/environments/$environmentId/backend'
    | '/projects/$projectId/environments/$environmentId/builds'
    | '/projects/$projectId/environments/$environmentId/cdn'
    | '/projects/$projectId/environments/$environmentId/lobbies'
    | '/projects/$projectId/environments/$environmentId/matchmaker'
    | '/projects/$projectId/environments/$environmentId/modules'
    | '/projects/$projectId/environments/$environmentId/servers'
    | '/projects/$projectId/environments/$environmentId/tokens'
    | '/projects/$projectId/environments/$environmentId/versions'
    | '/projects/$projectId/environments/$environmentId/'
    | '/projects/$projectId/environments/$environmentId/backend/logs'
    | '/projects/$projectId/environments/$environmentId/backend/variables'
    | '/projects/$projectId/environments/$environmentId/lobbies/logs'
    | '/projects/$projectId/environments/$environmentId/lobbies/settings'
    | '/projects/$projectId/environments/$environmentId/servers/$'
    | '/projects/$projectId/environments/$environmentId/backend/'
    | '/projects/$projectId/environments/$environmentId/lobbies/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/billing'
    | '/access-token/$token'
    | '/invite/$inviteCode'
    | '/'
    | '/games/$'
    | '/my-profile/features'
    | '/devices/link/$token'
    | '/my-profile'
    | '/projects/$projectId/billing'
    | '/projects/$projectId/tokens'
    | '/teams/$groupId/billing'
    | '/teams/$groupId/members'
    | '/projects/$projectId'
    | '/teams/$groupId'
    | '/projects/$projectId/namespaces/$'
    | '/projects/$projectId/settings/tokens'
    | '/projects/$projectId/settings'
    | '/teams/$groupId/settings'
    | '/projects/$projectId/environments/$environmentId/builds'
    | '/projects/$projectId/environments/$environmentId/cdn'
    | '/projects/$projectId/environments/$environmentId/matchmaker'
    | '/projects/$projectId/environments/$environmentId/modules'
    | '/projects/$projectId/environments/$environmentId/servers'
    | '/projects/$projectId/environments/$environmentId/tokens'
    | '/projects/$projectId/environments/$environmentId/versions'
    | '/projects/$projectId/environments/$environmentId'
    | '/projects/$projectId/environments/$environmentId/backend/logs'
    | '/projects/$projectId/environments/$environmentId/backend/variables'
    | '/projects/$projectId/environments/$environmentId/lobbies/logs'
    | '/projects/$projectId/environments/$environmentId/lobbies/settings'
    | '/projects/$projectId/environments/$environmentId/servers/$'
    | '/projects/$projectId/environments/$environmentId/backend'
    | '/projects/$projectId/environments/$environmentId/lobbies'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/_layout'
    | '/_authenticated/billing'
    | '/_authenticated/_layout/my-profile'
    | '/_authenticated/access-token/$token'
    | '/_authenticated/invite/$inviteCode'
    | '/_authenticated/_layout/'
    | '/_authenticated/_layout/games/$'
    | '/_authenticated/_layout/my-profile/features'
    | '/_authenticated/_layout/projects/$projectId'
    | '/_authenticated/_layout/teams/$groupId'
    | '/_authenticated/devices/link/$token'
    | '/_authenticated/_layout/my-profile/'
    | '/_authenticated/_layout/projects/$projectId/billing'
    | '/_authenticated/_layout/projects/$projectId/settings'
    | '/_authenticated/_layout/projects/$projectId/tokens'
    | '/_authenticated/_layout/teams/$groupId/billing'
    | '/_authenticated/_layout/teams/$groupId/members'
    | '/_authenticated/_layout/teams/$groupId/settings'
    | '/_authenticated/_layout/projects/$projectId/'
    | '/_authenticated/_layout/teams/$groupId/'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId'
    | '/_authenticated/_layout/projects/$projectId/namespaces/$'
    | '/_authenticated/_layout/projects/$projectId/settings/tokens'
    | '/_authenticated/_layout/projects/$projectId/settings/'
    | '/_authenticated/_layout/teams/$groupId/settings/'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/'
    | '/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_layout",
        "/_authenticated/billing",
        "/_authenticated/access-token/$token",
        "/_authenticated/invite/$inviteCode",
        "/_authenticated/devices/link/$token"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/_layout": {
      "filePath": "_authenticated/_layout.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_layout/my-profile",
        "/_authenticated/_layout/",
        "/_authenticated/_layout/games/$",
        "/_authenticated/_layout/projects/$projectId",
        "/_authenticated/_layout/teams/$groupId"
      ]
    },
    "/_authenticated/billing": {
      "filePath": "_authenticated/billing.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_layout/my-profile": {
      "filePath": "_authenticated/_layout/my-profile.tsx",
      "parent": "/_authenticated/_layout",
      "children": [
        "/_authenticated/_layout/my-profile/features",
        "/_authenticated/_layout/my-profile/"
      ]
    },
    "/_authenticated/access-token/$token": {
      "filePath": "_authenticated/access-token.$token.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/invite/$inviteCode": {
      "filePath": "_authenticated/invite.$inviteCode.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_layout/": {
      "filePath": "_authenticated/_layout/index.tsx",
      "parent": "/_authenticated/_layout"
    },
    "/_authenticated/_layout/games/$": {
      "filePath": "_authenticated/_layout/games/$.tsx",
      "parent": "/_authenticated/_layout"
    },
    "/_authenticated/_layout/my-profile/features": {
      "filePath": "_authenticated/_layout/my-profile/features.tsx",
      "parent": "/_authenticated/_layout/my-profile"
    },
    "/_authenticated/_layout/projects/$projectId": {
      "filePath": "_authenticated/_layout/projects/$projectId.tsx",
      "parent": "/_authenticated/_layout",
      "children": [
        "/_authenticated/_layout/projects/$projectId/billing",
        "/_authenticated/_layout/projects/$projectId/settings",
        "/_authenticated/_layout/projects/$projectId/tokens",
        "/_authenticated/_layout/projects/$projectId/",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId",
        "/_authenticated/_layout/projects/$projectId/namespaces/$"
      ]
    },
    "/_authenticated/_layout/teams/$groupId": {
      "filePath": "_authenticated/_layout/teams/$groupId.tsx",
      "parent": "/_authenticated/_layout",
      "children": [
        "/_authenticated/_layout/teams/$groupId/billing",
        "/_authenticated/_layout/teams/$groupId/members",
        "/_authenticated/_layout/teams/$groupId/settings",
        "/_authenticated/_layout/teams/$groupId/"
      ]
    },
    "/_authenticated/devices/link/$token": {
      "filePath": "_authenticated/devices.link.$token.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_layout/my-profile/": {
      "filePath": "_authenticated/_layout/my-profile/index.tsx",
      "parent": "/_authenticated/_layout/my-profile"
    },
    "/_authenticated/_layout/projects/$projectId/billing": {
      "filePath": "_authenticated/_layout/projects/$projectId/billing.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId"
    },
    "/_authenticated/_layout/projects/$projectId/settings": {
      "filePath": "_authenticated/_layout/projects/$projectId/settings.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId",
      "children": [
        "/_authenticated/_layout/projects/$projectId/settings/tokens",
        "/_authenticated/_layout/projects/$projectId/settings/"
      ]
    },
    "/_authenticated/_layout/projects/$projectId/tokens": {
      "filePath": "_authenticated/_layout/projects/$projectId/tokens.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId"
    },
    "/_authenticated/_layout/teams/$groupId/billing": {
      "filePath": "_authenticated/_layout/teams/$groupId/billing.tsx",
      "parent": "/_authenticated/_layout/teams/$groupId"
    },
    "/_authenticated/_layout/teams/$groupId/members": {
      "filePath": "_authenticated/_layout/teams/$groupId/members.tsx",
      "parent": "/_authenticated/_layout/teams/$groupId"
    },
    "/_authenticated/_layout/teams/$groupId/settings": {
      "filePath": "_authenticated/_layout/teams/$groupId/settings.tsx",
      "parent": "/_authenticated/_layout/teams/$groupId",
      "children": [
        "/_authenticated/_layout/teams/$groupId/settings/"
      ]
    },
    "/_authenticated/_layout/projects/$projectId/": {
      "filePath": "_authenticated/_layout/projects/$projectId/index.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId"
    },
    "/_authenticated/_layout/teams/$groupId/": {
      "filePath": "_authenticated/_layout/teams/$groupId/index.tsx",
      "parent": "/_authenticated/_layout/teams/$groupId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId",
      "children": [
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/"
      ]
    },
    "/_authenticated/_layout/projects/$projectId/namespaces/$": {
      "filePath": "_authenticated/_layout/projects/$projectId/namespaces/$.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId"
    },
    "/_authenticated/_layout/projects/$projectId/settings/tokens": {
      "filePath": "_authenticated/_layout/projects/$projectId/settings/tokens.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/settings"
    },
    "/_authenticated/_layout/projects/$projectId/settings/": {
      "filePath": "_authenticated/_layout/projects/$projectId/settings/index.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/settings"
    },
    "/_authenticated/_layout/teams/$groupId/settings/": {
      "filePath": "_authenticated/_layout/teams/$groupId/settings/index.tsx",
      "parent": "/_authenticated/_layout/teams/$groupId/settings"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/backend.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId",
      "children": [
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/"
      ]
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/builds": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/builds.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/cdn.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId",
      "children": [
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings",
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/"
      ]
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/matchmaker.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/modules": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/modules.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/servers.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId",
      "children": [
        "/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$"
      ]
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/tokens.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/versions": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/versions.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/index.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/logs.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/variables.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/logs.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/settings.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/servers/$.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/servers"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/backend/index.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/backend"
    },
    "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/": {
      "filePath": "_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies/index.tsx",
      "parent": "/_authenticated/_layout/projects/$projectId/environments/$environmentId/lobbies"
    }
  }
}
ROUTE_MANIFEST_END */
